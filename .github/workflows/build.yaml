name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: mkdir build  && go mod tidy && go build -ldflags "-w -s" -o build/kubescape
    
    - name: Release ${{ matrix.os }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: betav1.0.${{ github.run_number }}
        release_name: Release betav1.0.${{ github.run_number }}
        draft: false
        prerelease: false
 
    - name: Upload Release Asset ${{ matrix.os }}
      id: upload-release-asset-${{ matrix.os }} 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: build/kubescape
        asset_name: kubescape
        asset_content_type: application/octet-stream
