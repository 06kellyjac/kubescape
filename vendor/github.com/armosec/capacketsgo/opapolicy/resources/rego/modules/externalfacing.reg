package armo_builtins

import data.kubernetes.api.client as client


# input: pod
# apiversion: v1
# does: 
#	returns the external facing services of that pod
#
#
deny[msga] {
	pod := input[_]
	podns :=  pod.metadata.namespace
	podname := getName(pod.metadata)
	# pod := client.query_name_ns("pods","frontend-86c5ffb485-kfp9d", "default")
	labels := pod.body.metadata.labels
	filtered_labels := json.remove(labels, ["pod-template-hash"])
    
	 cluster_resource := client.query_all(
	 	"services"
	 )


	services := [svc | cluster_resource.body.items[i].metadata.namespace == podns; svc := cluster_resource.body.items[i]]
	service := 	services[_]
	np_or_lb := {"NodePort", "LoadBalancer"}
	np_or_lb[service.spec.type]
	service.spec.selector == filtered_labels
    
	msga := {
		"packagename": "armo_builtins",
		"alertMessage": sprintf("pod %v/%v exposed services: %v\n", [podns,podname,service]),
		"alertScore": 7,
		"alertObject": {"service":service,"labels":filtered_labels, "podname":podname,"namespace":podns}
	}
}

getName(metadata) = name {
	name := metadata.generateName
}
getName(metadata) = name {
	name := metadata.name
}