package armo_builtins
import data.kubernetes.api.client as client
import data.cautils as cautils


# input: None
# apiversion: v1
# does: 
#	returns roles+ related subjects in rolebinding


deny[msga] {
	# rsrc := client.query_all("roles")
	# role := rsrc.body.items[_]
	role := input[_]
	role.kind == "Role"
	rule := role.rules[_]
	cautils.list_contains(rule.resources,"secrets")
	canViewSecrets(rule)
	rbsrc := client.query_all("rolebindings")
	rolebinding := rbsrc.body.items[_]
	rolebinding.roleRef.kind == "Role"
	rolebinding.roleRef.name == role.metadata.name
	
    
	msga := {
		"alertMessage": sprintf("the following users: %v , got read secret access roles", [rolebinding.subjects]),
		"alertScore": 9,
		"packagename": "armo_builtins",
		"alertObject": {"role":role,"users":rolebinding.subjects}
	}
}



# input: None
# apiversion: v1
# does: 
#	returns clusterroles+ related subjects in rolebinding


deny[msga] {
	# rsrc := client.query_all("clusterroles")
	# role := rsrc.body.items[_]
	role := input[_]
	role.kind == "ClusterRole"
	rule := role.rules[_]
	cautils.list_contains(rule.resources,"secrets")
	canViewSecrets(rule)
	rbsrc := client.query_all("rolebindings")
	rolebinding := rbsrc.body.items[_]
	rolebinding.roleRef.kind == "ClusterRole"
	rolebinding.roleRef.name == role.metadata.name
	
    
	msga := {
		"alertMessage": sprintf("the following users: %v , got read secret access roles", [rolebinding.subjects]),
		"alertScore": 9,
		"packagename": "armo_builtins",
		"alertObject": {"clusterrole":role,"users":rolebinding.subjects}
	}
}


# input: None
# apiversion: v1
# does: 
#	returns clusterroles+ related subjects in clusterrolebinding
#
#
deny[msga] {
	# rsrc := client.query_all("clusterroles")
	# role := rsrc.body.items[_]
	role := input[_]
	role.kind == "ClusterRole"
	rule := role.rules[_]
	cautils.list_contains(rule.resources,"secrets")
	canViewSecrets(rule)
	rbsrc := client.query_all("clusterrolebindings")
	rolebinding := rbsrc.body.items[_]
	rolebinding.roleRef.kind == "ClusterRole"
	rolebinding.roleRef.name == role.metadata.name
	
    
	msga := {
		"alertMessage": sprintf("the following users: %v , got read secret access roles", [rolebinding.subjects]),
		"alertScore": 9,
		"packagename": "armo_builtins",
		"alertObject": {"clusterrole":role,"users":rolebinding.subjects}
	}
}

canViewSecrets(rule) {
	cautils.list_contains(rule.verbs,"get")
}
canViewSecrets(rule) {
	cautils.list_contains(rule.verbs,"watch")
}
